// Top-level build file where you can add configuration options common to all sub-projects/modules.


buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        // Android Gradle plugin
        classpath 'com.android.tools.build:gradle:1.2.3'

        // Resolves android-sdk dependencies
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'

        // APT compile-time annotation processing
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

ext {
    buildToolsVersion = '22.0.1'
    compileSdkVersion = 22
    minSdkVersion = 14
}

ext.libraries = [
        // Core libraries
        supportAnnotations             : 'com.android.support:support-annotations:22.2.0',
        rxJava                         : 'io.reactivex:rxjava:1.0.12',
        
        // Parts of StorIO
        storIOCommon                   : project(':storio-common'),
        storIOSQLite                   : project(':storio-sqlite'),
        storIOContentResolver          : project(':storio-content-resolver'),
        storIOSQLiteAnnotation         : project(':storio-sqlite-annotation'),
        storIOSQLiteAnnotationProcessor: project('storio-sqlite-annotation-processor'),
        storIOTestCommon               : project(':storio-test-common'),
        
        // Libraries for tests and sample app
        junit                          : 'junit:junit:4.12',
        mockitoCore                    : 'org.mockito:mockito-core:1.10.19',
        testingSupportLib              : 'com.android.support.test:testing-support-lib:0.1',
        guava                          : 'com.google.guava:guava:18.0',

        dagger                         : 'com.google.dagger:dagger:2.0',
        daggerCompiler                 : 'com.google.dagger:dagger-compiler:2.0',

        javaxInject                    : 'javax.inject:javax.inject:1',
        javaxAnnotationApi             : 'javax.annotation:javax.annotation-api:1.2',

        butterKnife                    : 'com.jakewharton:butterknife:6.1.0',
        appCompat                      : 'com.android.support:appcompat-v7:22.1.1',
        recyclerView                   : 'com.android.support:recyclerview-v7:22.1.1',
        rxAndroid                      : 'io.reactivex:rxandroid:0.24.0',
        timber                         : 'com.jakewharton.timber:timber:3.0.1',
        leakCanary                     : 'com.squareup.leakcanary:leakcanary-android:1.3',
        leakCanaryNoOp                 : 'com.squareup.leakcanary:leakcanary-android-no-op:1.3',

        autoService                    : 'com.google.auto.service:auto-service:1.0-rc2',
        javaPoet                       : 'com.squareup:javapoet:1.0.0',
        intellijAnnotations            : 'com.intellij:annotations:12.0',

        autoParcel                     : 'com.github.frankiesardo:auto-parcel:0.3',
        autoParcelProcessor            : 'com.github.frankiesardo:auto-parcel-processor:0.3'
]

// Option to disable Pre-Dexing on CI env
project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)
                || "com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {

            // enable or disable pre-dexing
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs

            // treat all Android Lint warning in all sub-projects as errors
            project.android.lintOptions.warningsAsErrors = true

            // StorIO should support Java 6
            project.android.compileOptions.sourceCompatibility = JavaVersion.VERSION_1_6
            project.android.compileOptions.targetCompatibility = JavaVersion.VERSION_1_6
        }
    }
}
