apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

if (project.file('../custom_env.gradle').exists()) {
    apply from: project.file('../custom_env.gradle')
}

version = '1.3.1'
group   = 'com.pushtorefresh'

def isReleaseBuild() {
    return version.contains('SNAPSHOT') == false
}

signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask('uploadArchives') }
    sign configurations.archives
}

android {
    compileSdkVersion 20
    buildToolsVersion '20.0.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 20
        versionCode 1
        versionName version
    }
}

dependencies {
    // Android support library, required for @NonNull and @Nullable annotations
    compile 'com.android.support:support-v4:20.0.0'
}

afterEvaluate { project ->
    uploadArchives {
        repositories.mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def sonatypeRepo = null

            if (project.hasProperty('sonatypeRepo')) {
                sonatypeRepo = project.ext['sonatypeRepo']
            }

            def sonatypeUsername = null

            if (project.hasProperty('sonatypeUsername')) {
                sonatypeUsername = project.ext['sonatypeUsername']
            }

            def sonatypePassword = null

            if (project.hasProperty('sonatypePassword')) {
                sonatypePassword = project.ext['sonatypePassword']
            }

            artifactId = 'bamboostorage'

            repository(url: sonatypeRepo) {
                authentication(userName: sonatypeUsername,
                        password: sonatypePassword)
            }

            pom.project {
                name 'Android BambooStorage library'
                packaging 'aar'
                description 'Modern, fast and memory efficient Storage API based on ContentProviders'
                url 'https://github.com/pushtorefresh/bamboo-storage'

                scm {
                    url 'git@github.com:pushtorefresh/bamboo-storage.git'
                    connection 'git@github.com:pushtorefresh/bamboo-storage.git'
                    developerConnection 'git@github.com:pushtorefresh/bamboo-storage.git'
                }

                licenses {
                    license {
                        name 'MIT license'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'artem-zinnatullin'
                        name 'Artem Zinnatullin'
                        email 'artem.zinnatullin@gmail.com'
                    }
                }
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
